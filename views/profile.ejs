<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Profile</title>
  <style>
    /* Basic reset */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      color: #333;
    }

    .profile-container {
      max-width: 800px;
      margin: 20px auto;
      padding: 20px;
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .profile-photo-container {
      text-align: center;
      margin-bottom: 20px;
    }

    .profile-photo {
      width: 150px;
      height: 150px;
      border-radius: 50%;
      object-fit: cover;
      border: 2px solid #ddd;
      display: block;
      margin: 0 auto;
      cursor: pointer;
      transition: border-color 0.3s;
    }

    .profile-photo:hover {
      border-color: #007bff;
    }

    .upload-button {
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      background-color: #007bff;
      color: #fff;
      cursor: pointer;
      font-size: 16px;
      transition: background-color 0.3s;
      margin-top: 10px;
    }

    .upload-button:hover {
      background-color: #0056b3;
    }

    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      justify-content: center;
      align-items: center;
    }

    .modal-content {
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      width: 90%;
      max-width: 500px;
      position: relative;
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1px solid #ddd;
      padding-bottom: 10px;
    }

    .modal-header h2 {
      font-size: 18px;
    }

    .modal-header .close {
      font-size: 24px;
      cursor: pointer;
    }

    .drop-area {
      border: 2px dashed #ddd;
      border-radius: 8px;
      padding: 20px;
      text-align: center;
      cursor: pointer;
      transition: border-color 0.3s;
    }

    .drop-area.hover {
      border-color: #007bff;
    }

    .drop-area img {
      width: 100%;
      max-height: 200px;
      object-fit: cover;
      border-radius: 8px;
      margin-top: 10px;
    }

    .clear-button {
      background-color: #dc3545;
      border: none;
      border-radius: 5px;
      color: #fff;
      padding: 10px 20px;
      cursor: pointer;
      font-size: 16px;
      margin-top: 10px;
    }

    .clear-button:hover {
      background-color: #c82333;
    }

    .progress-container {
      width: 100%;
      max-width: 300px;
      margin: 20px auto;
      display: none;
    }

    .progress-bar {
      width: 0;
      height: 5px;
      background-color: #007bff;
      transition: width 0.4s;
    }

    .notification {
      text-align: center;
      font-size: 16px;
      margin-top: 20px;
    }

    .notification.success {
      color: #28a745;
    }

    .notification.error {
      color: #dc3545;
    }

    .profile-info {
      margin-top: 20px;
      text-align: center;
    }

    .profile-info h2 {
      margin-bottom: 10px;
      font-size: 24px;
    }

    .profile-info p {
      font-size: 16px;
    }

    .view-photo-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      justify-content: center;
      align-items: center;
    }

    .view-photo-modal-content {
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      max-width: 90%;
      max-height: 90%;
      position: relative;
    }

    .view-photo-modal-content img {
      width: 100%;
      height: auto;
      border-radius: 8px;
    }
  </style>
</head>
<body>
  <div class="profile-container">
    <h1>User Profile</h1>
    <div class="profile-photo-container">
      <img src="<%= user.profile_photo || '/images/default-profile.png' %>" alt="Profile Photo" class="profile-photo" id="profilePhoto"/>
      <button class="upload-button" id="openModal">Update Photo</button>
    </div>
    <div class="profile-info">
      <h2><%= user.name %></h2>
      <p>Email: <%= user.email %></p>
      <!-- Add more user details as needed -->
    </div>
  </div>

  <!-- Modal for Upload -->
  <div class="modal" id="uploadModal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>Upload New Photo</h2>
        <span class="close" id="closeModal">&times;</span>
      </div>
      <div class="drop-area" id="dropArea">
        <p>Click or drag and drop an image here</p>
        <input type="file" id="profilePhotoInput" accept="image/*" style="display: none;" />
        <img id="previewImage" src="" alt="Preview" style="display: none;" />
      </div>
      <button id="clearButton" class="clear-button" style="display: none;">Clear Photo</button>
      <button id="uploadButton" class="upload-button">Upload Photo</button>
      <div class="progress-container" id="progressContainer">
        <div class="progress-bar" id="progressBar"></div>
      </div>
      <div class="notification" id="notification"></div>
    </div>
  </div>

  <!-- Modal for Viewing Profile Photo -->
  <div class="view-photo-modal" id="viewPhotoModal">
    <div class="view-photo-modal-content">
      <span class="close" id="closeViewPhotoModal">&times;</span>
      <img id="viewProfilePhoto" src="" alt="Profile Photo"/>
    </div>
  </div>
  <script>
    // Open upload modal
    document.getElementById('openModal').addEventListener('click', function() {
      document.getElementById('uploadModal').style.display = 'flex';
    });

    // Close upload modal
    document.getElementById('closeModal').addEventListener('click', function() {
      document.getElementById('uploadModal').style.display = 'none';
    });

    // Close upload modal when clicking outside the modal content
    window.addEventListener('click', function(event) {
      if (event.target === document.getElementById('uploadModal')) {
        document.getElementById('uploadModal').style.display = 'none';
      }
    });

    // Open view photo modal
    document.getElementById('profilePhoto').addEventListener('click', function() {
      const photoSrc = this.src;
      document.getElementById('viewProfilePhoto').src = photoSrc;
      document.getElementById('viewPhotoModal').style.display = 'flex';
    });

    // Close view photo modal
    document.getElementById('closeViewPhotoModal').addEventListener('click', function() {
      document.getElementById('viewPhotoModal').style.display = 'none';
    });

    // Close view photo modal when clicking outside the modal content
    window.addEventListener('click', function(event) {
      if (event.target === document.getElementById('viewPhotoModal')) {
        document.getElementById('viewPhotoModal').style.display = 'none';
      }
    });

    // Drag and drop functionality
    const dropArea = document.getElementById('dropArea');
    const fileInput = document.getElementById('profilePhotoInput');
    const previewImage = document.getElementById('previewImage');
    const clearButton = document.getElementById('clearButton');
    const uploadButton = document.getElementById('uploadButton');
    
    dropArea.addEventListener('click', () => fileInput.click());
    
    dropArea.addEventListener('dragover', (event) => {
      event.preventDefault();
      dropArea.classList.add('hover');
    });

    dropArea.addEventListener('dragleave', () => dropArea.classList.remove('hover'));

    dropArea.addEventListener('drop', (event) => {
      event.preventDefault();
      dropArea.classList.remove('hover');
      const files = event.dataTransfer.files;
      handleFileUpload(files);
    });

    fileInput.addEventListener('change', () => {
      const files = fileInput.files;
      handleFileUpload(files);
    });

    function handleFileUpload(files) {
      if (files.length > 0) {
        const file = files[0];
        if (file && file.type.startsWith('image/')) {
          const reader = new FileReader();
          reader.onload = function(event) {
            previewImage.src = event.target.result;
            previewImage.style.display = 'block';
            clearButton.style.display = 'inline-block';
          };
          reader.readAsDataURL(file);
        } else {
          showNotification('Please select an image file.', 'error');
        }
      }
    }

    clearButton.addEventListener('click', () => {
      previewImage.src = '';
      previewImage.style.display = 'none';
      clearButton.style.display = 'none';
    });

    uploadButton.addEventListener('click', () => {
      const formData = new FormData();
      const file = fileInput.files[0];
      formData.append('profilePhoto', file);

      const xhr = new XMLHttpRequest();
      xhr.open('POST', '/profile/photo', true);

      xhr.upload.onprogress = function(event) {
        if (event.lengthComputable) {
          const percentComplete = Math.round((event.loaded / event.total) * 100);
          document.getElementById('progressContainer').style.display = 'block';
          document.getElementById('progressBar').style.width = percentComplete + '%';
        }
      };

      xhr.onload = function() {
        if (xhr.status === 200) {
          showNotification('Profile photo updated successfully!', 'success');
          document.getElementById('profilePhoto').src = previewImage.src;
          clearButton.click();
        } else {
          showNotification('Failed to upload photo. Please try again.', 'error');
        }
        document.getElementById('progressContainer').style.display = 'none';
      };

      xhr.onerror = function() {
        showNotification('An error occurred during the upload.', 'error');
        document.getElementById('progressContainer').style.display = 'none';
      };

      xhr.send(formData);
    });

    function showNotification(message, type) {
      const notification = document.getElementById('notification');
      notification.textContent = message;
      notification.className = `notification ${type}`;
    }
  </script>
</body>
</html>
